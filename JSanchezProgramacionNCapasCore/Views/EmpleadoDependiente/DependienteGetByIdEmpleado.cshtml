@model ML.Dependiente
@{
    ViewData["Title"] = "DependienteGetByIdEmpleado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <h2>Dependientes Empleado</h2>
    </div>
    <div class="row">
        <h2>@Model.Empleado.Nombre @Model.Empleado.ApellidoPaterno @Model.Empleado.ApellidoMaterno</h2>
    </div>

    <hr />
    <div class="row">
        <div style="float:right">
            @Html.ActionLink("Agregar Dependiente", "Form", "EmpleadoDependiente", htmlAttributes: new { @class = "btn btn-success" })
        </div>
    </div>
    <hr />

    <hr>

        @using (Html.BeginForm("DependienteGetByIdEmpleado", "EmpleadoDependiente", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
        <div class="row">
            <div class="col-md-3">
                    @*@Html.LabelFor(model => model.Nombre)*@
                <div class="input-group">
                    <span class="input-group-addon" id="basic-addon1"><i class="fa-solid fa-signature" style="color:darkcyan"></i></span>
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @placeholder="Nombre", @id = "txtNombre", @onkeypress="SoloLetras(event, 'lblNombre','txtNombre')" })

                        @Html.ValidationMessageFor(model => model.Nombre,"", new { @class = "text-danger"})
                </div>
                    @Html.Label(null, "", new {@id ="lblNombre"})
            </div>


            <div class="col-md-3">
                    @*@Html.LabelFor(model => model.ApellidoPaterno)*@
                <div class="input-group">
                    <span class="input-group-addon" id="basic-addon1"><i class="fa-solid fa-signature" style="color:darkcyan"></i></span>
                        @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control",@placeholder="Apellido Paterno", @id = "txtApellidoPaterno", @onkeypress="SoloLetras(event, 'lblApellidoPaterno','txtApellidoPaterno')" })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno,"", new { @class = "text-danger"})
                </div>
                    @Html.Label(null, "", new {@id ="lblApellidoPaterno"})
            </div>

            <div class="col-md-3">
                    @*@Html.LabelFor(model => model.ApellidoMaterno)*@
                <div class="input-group">
                    <span class="input-group-addon" id="basic-addon1"><i class="fa-solid fa-signature" style="color:darkcyan"></i></span>
                        @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control",@placeholder="Apellido Materno", @id = "txtApellidoMaterno", @onkeypress="SoloLetras(event, 'lblApellidoMaterno','txtApellidoMaterno')" })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno,"", new { @class = "text-danger"})
                </div>
                    @Html.Label(null, "", new {@id ="lblApellidoMaterno"})
            </div>

            <div class="col-md-2">
                <div class="input-group">
                    <input type="submit" value="Buscar" class="btn btn-success" />
                </div>
            </div>
        </div>
        }
    </hr>

    <div class="row">
        @if (Model.Dependientes != null)
        {
            //tabla
            <table class="table table-dark table-bordered table-responsive table-hover" id="tblUsuario">
                <thead>
                    <tr>
                        <td class="text-center" style=" font-weight:bold;">Editar</td>

                        @*<td class="text-center" style=" font-weight:bold;">Empleado</td>*@
                        <td class="text-center" style=" font-weight:bold;">Nombre Dependinete</td>
                        <td class="text-center" style=" font-weight:bold;">Fecha Nacimiento</td>
                        <td class="text-center" style=" font-weight:bold;">Estado Civil</td>
                        <td class="text-center" style=" font-weight:bold;">Genero</td>
                        <td class="text-center" style=" font-weight:bold;">Telefono</td>
                        <td class="text-center" style=" font-weight:bold;">RFC</td>
                        <td class="text-center" style=" font-weight:bold;">Nombre Dependiente Tipo</td>

                        <td class="text-center" style=" font-weight:bold;">Eliminar</td>
                    </tr>
                </thead>

                <tbody>
                    @foreach (ML.Dependiente dependiente in Model.Dependientes)
                    {
                        <tr>
                            <td class="text-center"><a class="bi bi-slash-square-fill" href="@Url.Action("Form", "EmpleadoDependiente", new { IdDependiente = dependiente.IdDependiente })"></a></td>

                            @*<td class="d-none">@usuario.IdUsuario</td>*@
                            @*<td>@dependiente.NumeroEmpleado</td>*@
                            @*<td>@dependiente.Empleado.Nombre</td>*@
                            <td>@dependiente.Nombre @dependiente.ApellidoPaterno @dependiente.ApellidoMaterno</td>
                            <td>@dependiente.FechaNacimiento</td>
                            <td>@dependiente.EstadoCivil</td>
                            <td>@dependiente.Genero</td>
                            <td>@dependiente.Telefono</td>
                            <td>@dependiente.RFC</td>
                            <td>@dependiente.DependienteTipo.Nombre</td>


                            <td class="text-center"><a class="bi bi-trash-fill" href="@Url.Action("Delete", "EmpleadoDependiente", new { IdDependiente = dependiente.IdDependiente })" onclick="return confirm('Estas seguro que deseas eliminar este registro?');"></a></td>
                        </tr>
                    }
                </tbody>
            </table>


        }
        else
        {
            <div class="alert alert-danger" role="alert">Ocurrio un error al realizar la consulta </div>
        }
    </div>
</div>

